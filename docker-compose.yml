version: '3'
services:
  auth:
    build: ./services/auth
    command: npm run start:debug -- --tsc
    depends_on:
      - db
      - kafka
    ports:
      - 3000:3000
    environment:
      - JWT_SECRET=secret
    volumes:
      - ./services/auth/src:/app/src

  tasks:
    build: ./services/tasks
    command: npm run start:debug
    depends_on:
      - db
      - kafka
    environment:
      - AUTH_URL=http://auth:3000
    ports:
      - 3001:3000
    volumes:
      - ./services/tasks/src:/app/src

  kafka: 
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: tm
